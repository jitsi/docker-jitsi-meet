# Default values for jitsi
# Declare variables to be passed into your templates.
nameOverride: ""
fullnameOverride: ""

service:
  type: ClusterIP
  port: 80
  targetPort: 8080

ingress:
  enabled: true
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  paths: ["/"]
  hosts:
    - kube.jitsi.net
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

web:
  replicaCount: 2
  affinity: ""
  nodeSelector: {}
  tolerations: []
  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #  cpu: 100m
    #  memory: 128Mi
    # requests:
    #  cpu: 100m
    #  memory: 128Mi

jvb:
  replicaCount: 1
  affinity: ""
  env: |
    - name: DOCKER_HOST_ADDRESS
      valueFrom:  # overwrite with a loadbalancer that can handle UDP and TCP traffic
        fieldRef:
          fieldPath: status.hostIP
  nodeSelector: {}
  tolerations: []
  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #  cpu: 100m
    #  memory: 128Mi
    # requests:
    #  cpu: 100m
    #  memory: 128Mi

prosody:
  replicaCount: 1
  # jitsi does not work with multiple prosody servers
  affinity: ""
  env: |
    - name: DOCKER_HOST_ADDRESS
      valueFrom:  # overwrite with a loadbalancer that can handle UDP and TCP traffic
        fieldRef:
          fieldPath: status.hostIP
  nodeSelector: {}
  tolerations: []
  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #  cpu: 100m
    #  memory: 128Mi
    # requests:
    #  cpu: 100m
    #  memory: 128Mi

jicofo:
  replicaCount: 1
  affinity: ""
  env: |
    - name: DOCKER_HOST_ADDRESS
      valueFrom:  # overwrite with a loadbalancer that can handle UDP and TCP traffic
        fieldRef:
          fieldPath: status.hostIP
  nodeSelector: {}
  tolerations: []
  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #  cpu: 100m
    #  memory: 128Mi
    # requests:
    #  cpu: 100m
    #  memory: 128Mi

jibri:
  replicaCount: 0
  affinity: ""
  env: |
    - name: DOCKER_HOST_ADDRESS
      valueFrom:  # overwrite with a loadbalancer that can handle UDP and TCP traffic
        fieldRef:
          fieldPath: status.hostIP
  nodeSelector: {}
  tolerations: []
  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #  cpu: 100m
    #  memory: 128Mi
    # requests:
    #  cpu: 100m
    #  memory: 128Mi
