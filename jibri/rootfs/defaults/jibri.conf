jibri {
    api {
        http {
            external-api-port = {{ .Env.JIBRI_HTTP_API_EXTERNAL_PORT | default 2222 }}
            internal-api-port = {{ .Env.JIBRI_HTTP_API_INTERNAL_PORT | default 3333 }}
        }
        xmpp {
            environments = [
   		        {
                    name = "prod environment"
                    xmpp-server-hosts = [
                        "{{ .Env.XMPP_SERVER }}"
                    ]
                    xmpp-domain = "{{ .Env.XMPP_DOMAIN }}"
                    control-muc {
                        domain = "{{ .Env.XMPP_INTERNAL_MUC_DOMAIN }}"
                        room-name = "{{ .Env.JIBRI_BREWERY_MUC }}"
                        nickname = "jibri-instanse-{{ .Env.JIBRI_INSTANCE_ID }}"
                    }
                    control-login {
                        domain = "{{ .Env.XMPP_AUTH_DOMAIN }}"
                        username = "{{ .Env.JIBRI_XMPP_USER }}"
                        password = "{{ .Env.JIBRI_XMPP_PASSWORD }}"
                    }
                    sip-control-muc {
                        domain = "{{ .Env.XMPP_INTERNAL_MUC_DOMAIN }}"
                        room-name = "{{ .Env.JIBRI_BREWERY_MUC }}"
                        nickname = "jibri-instanse-{{ .Env.JIBRI_INSTANCE_ID }}"
                    }
                    call-login {
                        domain = "{{ .Env.XMPP_RECORDER_DOMAIN }}"
                        username = "{{ .Env.JIBRI_RECORDER_USER }}"
                        password = "{{ .Env.JIBRI_RECORDER_PASSWORD }}"
                    }
                    strip-from-room-domain = "{{ .Env.JIBRI_STRIP_DOMAIN_JID }}."
                    usage-timeout = {{ .Env.JIBRI_USAGE_TIMEOUT | default 0 }}
                    trust-all-xmpp-certs = {{ .Env.XMPP_TRUST_ALL_CERTS | default false }}
                }
	    ]
        }
    }
    recording {
        recordings-directory = "{{ .Env.JIBRI_RECORDING_DIR }}"
        {{ if .Env.JIBRI_FINALIZE_RECORDING_SCRIPT_PATH -}}
            "finalize-script": "{{ .Env.JIBRI_FINALIZE_RECORDING_SCRIPT_PATH }}"
        {{ end -}}
    }
    stats {
        enable-stats-d = {{ .Env.ENABLE_STATS_D | default false }}
    }
    chrome {
        {{ if .Env.CHROMIUM_FLAGS -}}
            flags = [
                "{{ join "\",\"" (splitList "," .Env.CHROMIUM_FLAGS) }}"
            ]
        {{ end -}}
    }
}